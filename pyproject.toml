[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "poulet_py"
description = "A library which hosts various neuroscience python methods"
readme = "README.md"
requires-python = ">=3.8"
dynamic = ['version']
license = "GPL-3.0-or-later"
authors = [
    { name = "Viktor Karamanis", email = "viktor.karamanis@outlook.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = []
keywords = ["poulet_py"]

[project.urls]
Homepage = "https://github.com/poulet-lab/poulet_py"
Documentation = "https://github.com/poulet-lab/poulet_py"
Changelog = "https://github.com/poulet-lab/poulet_py/release-notes/"
Source = "https://github.com/poulet-lab/poulet_py"


[tool.hatch.version]
path = "poulet_py/__init__.py"

[tool.hatch.envs.default]
dependencies = [
    "mypy==1.9.0",
    "ruff>=0.3.0,<5.0.0",
    "pre-commit>=3.3.1,<4.0.0",
    "devtools>=0.12.2",
    "ipython",
    "ptpython",
    "twine",
]

[project.optional-dependencies]
testing = [
    "autoflake>=2.0.2,<3.0.0",
    "black==24.1.1,<25.0",
    "isort>=5.12.0,<6.0.0",
    "pytest>=7.2.2,<9.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
]
hardware = [
"pypylon>=3.0.1,<=4.0.0",
]
all = [
"poulet_py[hardware]",
]

[tool.hatch.envs.default.scripts]
clean_pyc = "find . -type f -name \"*.pyc\" -delete"
clean_pyi = "find . -type f -name \"*.pyi\" -delete"
clean_pycache = "find . -type d -name \"*__pycache__*\" -delete"
build_with_check = "hatch build; twine check dist/*"
lint = "ruff check --fix --line-length 99  poulet_py tests {args}"

[tool.hatch.envs.docs]
dependencies = [
    "griffe-typingdoc>=0.2.2,<1.0",
    "mkautodoc>=0.2.0,<0.3.0",
    "mkdocs>=1.1.2,<2.0.0",
    "mkdocs-material>=9.4.4,<10.0.0",
    "mdx-include>=1.4.2,<2.0.0",
    "mkdocs-macros-plugin>=0.4.0",
    "mkdocs-meta-descriptions-plugin>=2.3.0",
    "mkdocstrings[python]>=0.23.0,<0.30.0",
    "pyyaml>=6.0,<7.0.0",
]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build"
serve = "mkdocs serve --dev-addr localhost:8000"

[tool.hatch.envs.test]
dependencies = ["poulet_py[testing]"]

[tool.hatch.envs.test.scripts]
test = "pytest {args}"
check_types = "mypy -p poulet_py"

[tool.isort]
profile = "black"
known_third_party = []
src_paths = ["poulet_py"]

[tool.mypy]
strict = true
warn_unused_configs = true
warn_unreachable = true
warn_return_any = true
disallow_untyped_decorators = true
disallow_any_generics = false
implicit_reexport = false
show_error_codes = true
disallow_incomplete_defs = true
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = false
strict_equality = false
strict_optional = false

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["E", "W", "F", "C", "B", "I"]
ignore = ["E501", "B008", "C901", "B026"]

exclude = ["docs_src/"]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.coverage.run]
parallel = true
context = '${CONTEXT}'
source = ["tests", "poulet_py"]
# omit = []

[[tool.mypy.overrides]]
module = "poulet_py.tests.*"
ignore_missing_imports = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "docs_src.*"
ignore_errors = true

[tool.pytest.ini_options]
addopts = ["--strict-config", "--strict-markers"]
xfail_strict = true
junit_family = "xunit2"

[tool.hatch.build.targets.sdist]
include = ["/poulet_py"]
